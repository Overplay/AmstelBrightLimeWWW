angular.module("ngOpTVApi",[]).factory("optvModel",function($http,$log,$timeout){var POLL_INTERVAL_MS=2e3;var apiPath="/api/";var DATA_UPDATE_METHOD="objectEquality";var DEBUG=true;var service={model:{}};if(window&&window.process&&window.process.execPath&&window.process.execPath.includes("FourLoko")){apiPath="http://localhost:1337"+apiPath}service.apiPath=apiPath;var _dataCb;var _appName;var _initialValue;var appWatcher;function logLead(){return"optvAPILime ("+_appName+"): "}function dbout(msg){if(DEBUG){$log.debug(logLead()+msg)}}function setInitialAppDataValueHTTP(){service.model=_initialValue;$http.post(apiPath+"appdata/"+_appName,_initialValue).then(function(data){$log.debug(logLead()+" initial value POSTed via HTTP.");startDataPolling()}).catch(function(err){$log.error(logLead()+" initial value POSTed via HTTP FAILED!!!! [FATAL]")})}function AppDataWatcher(){this.running=true;this.lastUpdated=0;var _this=this;function updateIfChanged(data){switch(DATA_UPDATE_METHOD){case"lastUpdated":if(data.lastUpdated>_this.lastUpdated){_this.lastUpdated=data.lastUpdated;service.model=data;_dataCb(service.model)}break;case"objectEquality":dbout("checking for data model change");if(!_.isEqual(service.model,data)){service.model=data;_dataCb(service.model)}break}}this.poll=function(){$timeout(function(){dbout("wasteful model poll starting");$http.get(apiPath+"appdata/"+_appName+"?dt="+(new Date).getTime(),{cache:false}).then(function(data){updateIfChanged(data.data);if(_this.running)_this.poll()}).catch(function(err){$log.error(logLead()+" couldn't poll model!");if(_this.running)_this.poll()})},POLL_INTERVAL_MS)}}function startDataPolling(){$log.info(logLead()+" starting data polling.");appWatcher=new AppDataWatcher;appWatcher.poll()}service.init=function(params){_appName=params.appName;_dataCb=params.dataCallback;_initialValue=params.initialValue||{};$log.debug("optvAPILime init for app: "+_appName);if(_dataCb){$http.get(apiPath+"appdata/"+_appName).then(function(data){if(data.data.length==0){dbout("got a length zero response on initial read of model");setInitialAppDataValueHTTP()}else if(_.isEmpty(data.data)&&!_.isEmpty(_initialValue)){dbout("got an empty object response on initial read of model");setInitialAppDataValueHTTP()}else{dbout("model data (appData) already existed via http."+data.data);service.model=data.data;_dataCb(service.model);startDataPolling()}}).catch(function(err){dbout("model data not in DB, creating via http");setInitialAppDataValueHTTP()});$log.debug("optvAPILime init app: "+_appName+" subscribing to data")}};service.save=function(){return $http.post(apiPath+"appdata/"+_appName,service.model)};service.moveApp=function(appid){appid=appid||_appName;return $http.post(apiPath+"app/"+appid+"/move")};service.launchApp=function(appid){appid=appid||_appName;return $http.post(apiPath+"app/"+appid+"/launch")};service.killApp=function(appid){appid=appid||_appName;return $http.post(apiPath+"app/"+appid+"/kill")};return service});